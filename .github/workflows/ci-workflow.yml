name: Build, test and create Docker image

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20.x, 21.x]
    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npm ci
    - run: npm run build --if-present
    # upload build artifact
    - uses: actions/upload-artifact@v4
      if: ${{matrix.node-version == '21.x'}}
      with:
        name: webpack artifacts
        path: public/
      
  test:
    runs-on: ubuntu-latest
    needs: build
    strategy:
      matrix:
        node-version: [20.x, 21.x]

    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - uses: actions/download-artifact@v4
        with:
          name: webpack artifacts
          path: public/
      - name: npm install and test
        run: |
          npm install
          npm test -- -u
        env:
          CI: true
  
  Build-and-Push-DockerImage:
    runs-on: ubuntu-latest
    needs: test
    name: Docker build, tag, push
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: webpack artifacts
          path: public/

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to registry - ${{ env.REGISTRY }}
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      #Generate Docker tags based on the following attributes
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          #Specify the registery/image_name as the base
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build container image
        uses: docker/build-push-action@v5
        with:
          context: .
          #push: true
           # Don't push the docker image when we have a pull request
          push: ${{github.event_name != 'pull_request'}}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

        
          